#ifndef STRREFCONSTS
#define STRREFCONSTS

#line 4 "strrefconsts.hpp" 
#include <rapidjson/document.h>
#include "strref.hpp"
namespace text {
extern const char * _line_FULL;
extern const char * _column_FULL;
extern const char * _type_FULL;
extern const char * _start_FULL;
extern const char * _end_FULL;
extern const char * _range_FULL;
extern const char * _loc_FULL;
extern const char * _value_FULL;
extern const char * _Identifier_FULL;
extern const char * _Punctuator_FULL;
extern const char * _name_FULL;
extern const char * _object_FULL;
extern const char * _property_FULL;
extern const char * _computed_FULL;
extern const char * _MemberExpression_FULL;
extern const char * _Keyword_FULL;
extern const char * _operator_FULL;
extern const char * _left_FULL;
extern const char * _right_FULL;
extern const char * _raw_FULL;
extern const char * _Literal_FULL;
extern const char * _expression_FULL;
extern const char * _arguments_FULL;
extern const char * _callee_FULL;
extern const char * _CallExpression_FULL;
extern const char * _init_FULL;
extern const char * _body_FULL;
extern const char * _id_FULL;
extern const char * _ExpressionStatement_FULL;
extern const char * _kind_FULL;
extern const char * _Numeric_FULL;
extern const char * _BinaryExpression_FULL;
extern const char * _String_FULL;
extern const char * _AssignmentExpression_FULL;
extern const char * _var_FULL;
extern const char * _BlockStatement_FULL;
extern const char * _key_FULL;
extern const char * _this_FULL;
extern const char * _ThisExpression_FULL;
extern const char * _VariableDeclarator_FULL;
extern const char * _argument_FULL;
extern const char * _Property_FULL;
extern const char * _test_FULL;
extern const char * _params_FULL;
extern const char * _consequent_FULL;
extern const char * _function_FULL;
extern const char * _defaults_FULL;
extern const char * _rest_FULL;
extern const char * _generator_FULL;
extern const char * _alternate_FULL;
extern const char * _declarations_FULL;
extern const char * _VariableDeclaration_FULL;
extern const char * _LogicalExpression_FULL;
extern const char * _FunctionExpression_FULL;
extern const char * _prefix_FULL;
extern const char * _return_FULL;
extern const char * _ReturnStatement_FULL;
extern const char * _if_FULL;
extern const char * _IfStatement_FULL;
extern const char * _UnaryExpression_FULL;
extern const char * _properties_FULL;
extern const char * _ObjectExpression_FULL;
extern const char * _elements_FULL;
extern const char * _ArrayExpression_FULL;
extern const char * _ConditionalExpression_FULL;
extern const char * _expressions_FULL;
extern const char * _SequenceExpression_FULL;
extern const char * _Boolean_FULL;
extern const char * _Null_FULL;
extern const char * _UpdateExpression_FULL;
extern const char * _for_FULL;
extern const char * _FunctionDeclaration_FULL;
extern const char * _update_FULL;
extern const char * _else_FULL;
extern const char * _ForStatement_FULL;
extern const char * _new_FULL;
extern const char * _NewExpression_FULL;
extern const char * _index_FULL;
extern const char * _typeof_FULL;
extern const char * _get_FULL;
extern const char * _in_FULL;
extern const char * _SwitchCase_FULL;
extern const char * _label_FULL;
extern const char * _each_FULL;
extern const char * _case_FULL;
extern const char * _RegularExpression_FULL;
extern const char * _break_FULL;
extern const char * _BreakStatement_FULL;
extern const char * _set_FULL;
extern const char * _delete_FULL;
extern const char * _ForInStatement_FULL;
extern const char * _instanceof_FULL;
extern const char * _while_FULL;
extern const char * _message_FULL;
extern const char * _param_FULL;
extern const char * _handlers_FULL;
extern const char * _block_FULL;
extern const char * _throw_FULL;
extern const char * _ThrowStatement_FULL;
extern const char * _WhileStatement_FULL;
extern const char * _source_FULL;
extern const char * _finalizer_FULL;
extern const char * _try_FULL;
extern const char * _guardedHandlers_FULL;
extern const char * _TryStatement_FULL;
extern const char * _catch_FULL;
extern const char * _CatchClause_FULL;
extern const char * _cases_FULL;
extern const char * _tokens_FULL;
extern const char * _switch_FULL;
extern const char * _discriminant_FULL;
extern const char * _SwitchStatement_FULL;
extern const char * _continue_FULL;
extern const char * _ContinueStatement_FULL;
extern const char * _regexp_FULL;
extern const char * _default_FULL;
extern const char * _class_FULL;
extern const char * _do_FULL;
extern const char * _DoWhileStatement_FULL;
extern const char * _Program_FULL;
extern const char * _EmptyStatement_FULL;
extern const char * _void_FULL;
extern const char * _finally_FULL;
extern const char * _LabeledStatement_FULL;
extern const char * _errors_FULL;
extern const char * _Line_FULL;
extern const char * _with_FULL;
extern const char * _program_FULL;
extern const char * _lineNumber_FULL;
extern const char * _description_FULL;
extern const char * _WithStatement_FULL;
extern const char * _extends_FULL;
extern const char * _debugger_FULL;
extern const char * _import_FULL;
extern const char * _export_FULL;
extern const char * _DebuggerStatement_FULL;
extern const char * _comments_FULL;
extern const char * _isAssert_FULL;
extern const char * _isError_FULL;
extern const char * _leadingComments_FULL;
extern const char * _trailingComments_FULL;
extern const char * _regexpBody_FULL;
extern const char * _regexpFlags_FULL;
extern const char * _ArrowFunctionExpression_FULL;
extern const char * _ArrowParameterPlaceholder_FULL;
extern const char * _Block_FULL;
extern const char * _const_FULL;
extern const char * _ZendZ_FULL;
extern const char * _enum_FULL;
extern const char * _let_FULL;
extern const char * _super_FULL;
extern const char * _UnresolvedNode_FULL;
extern const char * _yield_FULL;
#ifdef LOWMEM
extern const char * _line_;
extern const StrRef _line;
extern const char * _column_;
extern const StrRef _column;
extern const char * _type_;
extern const StrRef _type;
extern const char * _start_;
extern const StrRef _start;
extern const char * _end_;
extern const StrRef _end;
extern const char * _range_;
extern const StrRef _range;
extern const char * _loc_;
extern const StrRef _loc;
extern const char * _value_;
extern const StrRef _value;
extern const char * _Identifier_;
extern const StrRef _Identifier;
extern const char * _Punctuator_;
extern const StrRef _Punctuator;
extern const char * _name_;
extern const StrRef _name;
extern const char * _object_;
extern const StrRef _object;
extern const char * _property_;
extern const StrRef _property;
extern const char * _computed_;
extern const StrRef _computed;
extern const char * _MemberExpression_;
extern const StrRef _MemberExpression;
extern const char * _Keyword_;
extern const StrRef _Keyword;
extern const char * _operator_;
extern const StrRef _operator;
extern const char * _left_;
extern const StrRef _left;
extern const char * _right_;
extern const StrRef _right;
extern const char * _raw_;
extern const StrRef _raw;
extern const char * _Literal_;
extern const StrRef _Literal;
extern const char * _expression_;
extern const StrRef _expression;
extern const char * _arguments_;
extern const StrRef _arguments;
extern const char * _callee_;
extern const StrRef _callee;
extern const char * _CallExpression_;
extern const StrRef _CallExpression;
extern const char * _init_;
extern const StrRef _init;
extern const char * _body_;
extern const StrRef _body;
extern const char * _id_;
extern const StrRef _id;
extern const char * _ExpressionStatement_;
extern const StrRef _ExpressionStatement;
extern const char * _kind_;
extern const StrRef _kind;
extern const char * _Numeric_;
extern const StrRef _Numeric;
extern const char * _BinaryExpression_;
extern const StrRef _BinaryExpression;
extern const char * _String_;
extern const StrRef _String;
extern const char * _AssignmentExpression_;
extern const StrRef _AssignmentExpression;
extern const char * _var_;
extern const StrRef _var;
extern const char * _BlockStatement_;
extern const StrRef _BlockStatement;
extern const char * _key_;
extern const StrRef _key;
extern const char * _this_;
extern const StrRef _this;
extern const char * _ThisExpression_;
extern const StrRef _ThisExpression;
extern const char * _VariableDeclarator_;
extern const StrRef _VariableDeclarator;
extern const char * _argument_;
extern const StrRef _argument;
extern const char * _Property_;
extern const StrRef _Property;
extern const char * _test_;
extern const StrRef _test;
extern const char * _params_;
extern const StrRef _params;
extern const char * _consequent_;
extern const StrRef _consequent;
extern const char * _function_;
extern const StrRef _function;
extern const char * _defaults_;
extern const StrRef _defaults;
extern const char * _rest_;
extern const StrRef _rest;
extern const char * _generator_;
extern const StrRef _generator;
extern const char * _alternate_;
extern const StrRef _alternate;
extern const char * _declarations_;
extern const StrRef _declarations;
extern const char * _VariableDeclaration_;
extern const StrRef _VariableDeclaration;
extern const char * _LogicalExpression_;
extern const StrRef _LogicalExpression;
extern const char * _FunctionExpression_;
extern const StrRef _FunctionExpression;
extern const char * _prefix_;
extern const StrRef _prefix;
extern const char * _return_;
extern const StrRef _return;
extern const char * _ReturnStatement_;
extern const StrRef _ReturnStatement;
extern const char * _if_;
extern const StrRef _if;
extern const char * _IfStatement_;
extern const StrRef _IfStatement;
extern const char * _UnaryExpression_;
extern const StrRef _UnaryExpression;
extern const char * _properties_;
extern const StrRef _properties;
extern const char * _ObjectExpression_;
extern const StrRef _ObjectExpression;
extern const char * _elements_;
extern const StrRef _elements;
extern const char * _ArrayExpression_;
extern const StrRef _ArrayExpression;
extern const char * _ConditionalExpression_;
extern const StrRef _ConditionalExpression;
extern const char * _expressions_;
extern const StrRef _expressions;
extern const char * _SequenceExpression_;
extern const StrRef _SequenceExpression;
extern const char * _Boolean_;
extern const StrRef _Boolean;
extern const char * _Null_;
extern const StrRef _Null;
extern const char * _UpdateExpression_;
extern const StrRef _UpdateExpression;
extern const char * _for_;
extern const StrRef _for;
extern const char * _FunctionDeclaration_;
extern const StrRef _FunctionDeclaration;
extern const char * _update_;
extern const StrRef _update;
extern const char * _else_;
extern const StrRef _else;
extern const char * _ForStatement_;
extern const StrRef _ForStatement;
extern const char * _new_;
extern const StrRef _new;
extern const char * _NewExpression_;
extern const StrRef _NewExpression;
extern const char * _index_;
extern const StrRef _index;
extern const char * _typeof_;
extern const StrRef _typeof;
extern const char * _get_;
extern const StrRef _get;
extern const char * _in_;
extern const StrRef _in;
extern const char * _SwitchCase_;
extern const StrRef _SwitchCase;
extern const char * _label_;
extern const StrRef _label;
extern const char * _each_;
extern const StrRef _each;
extern const char * _case_;
extern const StrRef _case;
extern const char * _RegularExpression_;
extern const StrRef _RegularExpression;
extern const char * _break_;
extern const StrRef _break;
extern const char * _BreakStatement_;
extern const StrRef _BreakStatement;
extern const char * _set_;
extern const StrRef _set;
extern const char * _delete_;
extern const StrRef _delete;
extern const char * _ForInStatement_;
extern const StrRef _ForInStatement;
extern const char * _instanceof_;
extern const StrRef _instanceof;
extern const char * _while_;
extern const StrRef _while;
extern const char * _message_;
extern const StrRef _message;
extern const char * _param_;
extern const StrRef _param;
extern const char * _handlers_;
extern const StrRef _handlers;
extern const char * _block_;
extern const StrRef _block;
extern const char * _throw_;
extern const StrRef _throw;
extern const char * _ThrowStatement_;
extern const StrRef _ThrowStatement;
extern const char * _WhileStatement_;
extern const StrRef _WhileStatement;
extern const char * _source_;
extern const StrRef _source;
extern const char * _finalizer_;
extern const StrRef _finalizer;
extern const char * _try_;
extern const StrRef _try;
extern const char * _guardedHandlers_;
extern const StrRef _guardedHandlers;
extern const char * _TryStatement_;
extern const StrRef _TryStatement;
extern const char * _catch_;
extern const StrRef _catch;
extern const char * _CatchClause_;
extern const StrRef _CatchClause;
extern const char * _cases_;
extern const StrRef _cases;
extern const char * _tokens_;
extern const StrRef _tokens;
extern const char * _switch_;
extern const StrRef _switch;
extern const char * _discriminant_;
extern const StrRef _discriminant;
extern const char * _SwitchStatement_;
extern const StrRef _SwitchStatement;
extern const char * _continue_;
extern const StrRef _continue;
extern const char * _ContinueStatement_;
extern const StrRef _ContinueStatement;
extern const char * _regexp_;
extern const StrRef _regexp;
extern const char * _default_;
extern const StrRef _default;
extern const char * _class_;
extern const StrRef _class;
extern const char * _do_;
extern const StrRef _do;
extern const char * _DoWhileStatement_;
extern const StrRef _DoWhileStatement;
extern const char * _Program_;
extern const StrRef _Program;
extern const char * _EmptyStatement_;
extern const StrRef _EmptyStatement;
extern const char * _void_;
extern const StrRef _void;
extern const char * _finally_;
extern const StrRef _finally;
extern const char * _LabeledStatement_;
extern const StrRef _LabeledStatement;
extern const char * _errors_;
extern const StrRef _errors;
extern const char * _Line_;
extern const StrRef _Line;
extern const char * _with_;
extern const StrRef _with;
extern const char * _program_;
extern const StrRef _program;
extern const char * _lineNumber_;
extern const StrRef _lineNumber;
extern const char * _description_;
extern const StrRef _description;
extern const char * _WithStatement_;
extern const StrRef _WithStatement;
extern const char * _extends_;
extern const StrRef _extends;
extern const char * _debugger_;
extern const StrRef _debugger;
extern const char * _import_;
extern const StrRef _import;
extern const char * _export_;
extern const StrRef _export;
extern const char * _DebuggerStatement_;
extern const StrRef _DebuggerStatement;
extern const char * _comments_;
extern const StrRef _comments;
extern const char * _isAssert_;
extern const StrRef _isAssert;
extern const char * _isError_;
extern const StrRef _isError;
extern const char * _leadingComments_;
extern const StrRef _leadingComments;
extern const char * _trailingComments_;
extern const StrRef _trailingComments;
extern const char * _regexpBody_;
extern const StrRef _regexpBody;
extern const char * _regexpFlags_;
extern const StrRef _regexpFlags;
extern const char * _ArrowFunctionExpression_;
extern const StrRef _ArrowFunctionExpression;
extern const char * _ArrowParameterPlaceholder_;
extern const StrRef _ArrowParameterPlaceholder;
extern const char * _Block_;
extern const StrRef _Block;
extern const char * _const_;
extern const StrRef _const;
extern const char * _ZendZ_;
extern const StrRef _ZendZ;
extern const char * _enum_;
extern const StrRef _enum;
extern const char * _let_;
extern const StrRef _let;
extern const char * _super_;
extern const StrRef _super;
extern const char * _UnresolvedNode_;
extern const StrRef _UnresolvedNode;
extern const char * _yield_;
extern const StrRef _yield;

 extern const char * decoder[62][3];
#endif
#ifndef LOWMEM
extern const StrRef _line;
extern const StrRef _column;
extern const StrRef _type;
extern const StrRef _start;
extern const StrRef _end;
extern const StrRef _range;
extern const StrRef _loc;
extern const StrRef _value;
extern const StrRef _Identifier;
extern const StrRef _Punctuator;
extern const StrRef _name;
extern const StrRef _object;
extern const StrRef _property;
extern const StrRef _computed;
extern const StrRef _MemberExpression;
extern const StrRef _Keyword;
extern const StrRef _operator;
extern const StrRef _left;
extern const StrRef _right;
extern const StrRef _raw;
extern const StrRef _Literal;
extern const StrRef _expression;
extern const StrRef _arguments;
extern const StrRef _callee;
extern const StrRef _CallExpression;
extern const StrRef _init;
extern const StrRef _body;
extern const StrRef _id;
extern const StrRef _ExpressionStatement;
extern const StrRef _kind;
extern const StrRef _Numeric;
extern const StrRef _BinaryExpression;
extern const StrRef _String;
extern const StrRef _AssignmentExpression;
extern const StrRef _var;
extern const StrRef _BlockStatement;
extern const StrRef _key;
extern const StrRef _this;
extern const StrRef _ThisExpression;
extern const StrRef _VariableDeclarator;
extern const StrRef _argument;
extern const StrRef _Property;
extern const StrRef _test;
extern const StrRef _params;
extern const StrRef _consequent;
extern const StrRef _function;
extern const StrRef _defaults;
extern const StrRef _rest;
extern const StrRef _generator;
extern const StrRef _alternate;
extern const StrRef _declarations;
extern const StrRef _VariableDeclaration;
extern const StrRef _LogicalExpression;
extern const StrRef _FunctionExpression;
extern const StrRef _prefix;
extern const StrRef _return;
extern const StrRef _ReturnStatement;
extern const StrRef _if;
extern const StrRef _IfStatement;
extern const StrRef _UnaryExpression;
extern const StrRef _properties;
extern const StrRef _ObjectExpression;
extern const StrRef _elements;
extern const StrRef _ArrayExpression;
extern const StrRef _ConditionalExpression;
extern const StrRef _expressions;
extern const StrRef _SequenceExpression;
extern const StrRef _Boolean;
extern const StrRef _Null;
extern const StrRef _UpdateExpression;
extern const StrRef _for;
extern const StrRef _FunctionDeclaration;
extern const StrRef _update;
extern const StrRef _else;
extern const StrRef _ForStatement;
extern const StrRef _new;
extern const StrRef _NewExpression;
extern const StrRef _index;
extern const StrRef _typeof;
extern const StrRef _get;
extern const StrRef _in;
extern const StrRef _SwitchCase;
extern const StrRef _label;
extern const StrRef _each;
extern const StrRef _case;
extern const StrRef _RegularExpression;
extern const StrRef _break;
extern const StrRef _BreakStatement;
extern const StrRef _set;
extern const StrRef _delete;
extern const StrRef _ForInStatement;
extern const StrRef _instanceof;
extern const StrRef _while;
extern const StrRef _message;
extern const StrRef _param;
extern const StrRef _handlers;
extern const StrRef _block;
extern const StrRef _throw;
extern const StrRef _ThrowStatement;
extern const StrRef _WhileStatement;
extern const StrRef _source;
extern const StrRef _finalizer;
extern const StrRef _try;
extern const StrRef _guardedHandlers;
extern const StrRef _TryStatement;
extern const StrRef _catch;
extern const StrRef _CatchClause;
extern const StrRef _cases;
extern const StrRef _tokens;
extern const StrRef _switch;
extern const StrRef _discriminant;
extern const StrRef _SwitchStatement;
extern const StrRef _continue;
extern const StrRef _ContinueStatement;
extern const StrRef _regexp;
extern const StrRef _default;
extern const StrRef _class;
extern const StrRef _do;
extern const StrRef _DoWhileStatement;
extern const StrRef _Program;
extern const StrRef _EmptyStatement;
extern const StrRef _void;
extern const StrRef _finally;
extern const StrRef _LabeledStatement;
extern const StrRef _errors;
extern const StrRef _Line;
extern const StrRef _with;
extern const StrRef _program;
extern const StrRef _lineNumber;
extern const StrRef _description;
extern const StrRef _WithStatement;
extern const StrRef _extends;
extern const StrRef _debugger;
extern const StrRef _import;
extern const StrRef _export;
extern const StrRef _DebuggerStatement;
extern const StrRef _comments;
extern const StrRef _isAssert;
extern const StrRef _isError;
extern const StrRef _leadingComments;
extern const StrRef _trailingComments;
extern const StrRef _regexpBody;
extern const StrRef _regexpFlags;
extern const StrRef _ArrowFunctionExpression;
extern const StrRef _ArrowParameterPlaceholder;
extern const StrRef _Block;
extern const StrRef _const;
extern const StrRef _ZendZ;
extern const StrRef _enum;
extern const StrRef _let;
extern const StrRef _super;
extern const StrRef _UnresolvedNode;
extern const StrRef _yield;
#endif
}

#endif
